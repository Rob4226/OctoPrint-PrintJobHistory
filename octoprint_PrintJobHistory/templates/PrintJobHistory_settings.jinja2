
<form id="settings_printJobHistory" class="form-horizontal" >


    <div class="tabbable"> <!-- Only required for left/right tabs -->
        <ul class="nav nav-tabs">
            <li class="active"><a href="#tab-pjh-General" data-toggle="tab">General</a></li>
            <li><a href="#tab-pjh-Database" data-toggle="tab">External Database</a></li>
<!--            <li><a href="#tab-pjh-Visibility" data-toggle="tab">Visibility</a></li>-->
<!--            <li><a href="#tab-pjh-Filament" data-toggle="tab">Filament</a></li>-->
            <li><a href="#tab-pjh-Camera" data-toggle="tab">Camera</a></li>
            <li><a href="#tab-pjh-Temperature" data-toggle="tab">Temperature</a></li>
            <li><a href="#tab-pjh-Export-Import" data-toggle="tab">Export / Import</a></li>
            <li><a href="#tab-pjh-Storage" data-toggle="tab">Storage</a></li>
            <li><a href="#tab-pjh-Debugging" data-toggle="tab">Debugging</a></li>
        </ul>
        <div class="tab-content">
            <!-- GENERAL - TAB -->
            <div class="tab-pane active" id="tab-pjh-General">
                <div class="control-group">
                    <div class="controls">
                        <label class="">
                            Capture print history:
                                <label class="checkbox">
                                    <input  style="margin-top:-4px" type="radio" name="capturePrintJobHistoryMode" value="none" data-bind="checked: pluginSettings.capturePrintJobHistoryMode"> none</span>
                                </label>
                                <label class="checkbox">
                                    <input  style="margin-top:-4px" type="radio" name="capturePrintJobHistoryMode" value="always" data-bind="checked: pluginSettings.capturePrintJobHistoryMode"> always</span>
                                </label>
                                <label class="checkbox">
                                        <input style="margin-top:-4px" type="radio" name="capturePrintJobHistoryMode" value="successful" data-bind="checked: pluginSettings.capturePrintJobHistoryMode"> only on successful prints
                                </label>
                        </label>
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.showPrintJobDialogAfterPrint" > Show print job edit dialog after print
                                <label class="radio">
                                    <input type="radio" name="showPrintJobDialogAfterPrintMode" value="always" data-bind="checked: pluginSettings.showPrintJobDialogAfterPrintMode, enable: pluginSettings.showPrintJobDialogAfterPrint" > always
                                </label>
                                <label class="radio">
                                        <input type="radio" name="showPrintJobDialogAfterPrintMode" value="successful" data-bind="checked: pluginSettings.showPrintJobDialogAfterPrintMode, enable: pluginSettings.showPrintJobDialogAfterPrint"> only on successful prints
                                </label>

                        </label>
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.pluginCheckActivated" > Activate Plugin dependency check
                        </label>
                    </div>
                </div>
            </div>
            <!-- VISIBILITY - TAB -->
<!--            <div class="tab-pane" id="tab-pjh-Visibility">-->
<!--                TODO some visibility-settings-->
<!--            </div>-->
            <!-- FILAMENT - TAB -->
<!--            <div class="tab-pane" id="tab-pjh-Filament">-->
<!--                TODO some filament-settings-->
<!--            </div>-->
            <!-- External Database - TAB -->
        <div class="tab-pane" id="tab-pjh-Database">
            <div class="control-group">
                <div class="controls">
                    <label class="checkbox">
                        <input type="checkbox" data-bind="checked: pluginSettings.externalDatabase.enabled" > Use external database (PostgreSQL only for now) instead of local SQLite3
                    </label>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">Database Name</label>
                <div class="controls">
                    <input type="text" data-bind="value: pluginSettings.externalDatabase.database_name"/>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">Host</label>
                <div class="controls">
                    <input type="text" data-bind="value: pluginSettings.externalDatabase.host"/>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">User</label>
                <div class="controls">
                    <input type="text" data-bind="value: pluginSettings.externalDatabase.username"/>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">Password</label>
                <div class="controls">
                    <input type="text" data-bind="value: pluginSettings.externalDatabase.password"/>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label">Port</label>
                <div class="controls">
                    <input type="text" data-bind="value: pluginSettings.externalDatabase.port"/>
                </div>
            </div>
        </div>
            <!-- CAMERA - TAB -->
            <div class="tab-pane" id="tab-pjh-Camera">
                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.takeSnapshotAfterPrint,
                                                              disable: pluginSettings.takeSnapshotOnGCodeCommnd" > Take camera snapshot after print
                        </label>
                        <span class="help-inline">Hint: if enabled, the thumbnail image from the gcode is not stored in the history!</span>
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.takePluginThumbnailAfterPrint,
                                                              disable: pluginSettings.takeSnapshotOnGCodeCommnd" > Use thumbnail (if provided) after print, instead of camera snapshot
                        </label>
                        <div class="help-inline">
                            Currently tested thumbnail plugins:
                            <ul>
                                <li>Ultimaker Format Package (if uploaded in ufp format)</li>
                                <li>PrusaSlicer Thumbnails </li>
                            </ul>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.takeSnapshotOnGCodeCommnd" > Take camera snapshot if following gcode was sent
                            <div><input type="text" data-bind="value: pluginSettings.takeSnapshotGCodeCommndPattern" ></div>
                        </label>
                        <div class="help-inline">
                            You don't need to enter the command exactly, the plugin  checks if the gcode starts with the entered text.
                            <div>E.g. Text: <code>M117 Snap</code>. Sent gcode was: <code>M117 Snapshot</code>. Result: snapshot is taken</div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- TEMPERATURE - TAB -->
            <div class="tab-pane" id="tab-pjh-Temperature">
                <div class="control-group">
                    <div class="">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.takeTemperatureFromPreHeatPlugin" > Take temperature values from PreHeat-Plugin (if installed)
                        </label>
                    </div>
                </div>
                <div class="control-group">
                    <label class="">Fallback: Read temperature from printer after print start with a delay of
                        <span class="input">
                            <span class="input-append">
                                <input type="number" step="1" min="0" class="input-mini text-right" data-bind="value: pluginSettings.delayReadingTemperatureFromPrinter">
                                <span class="add-on">seconds</span>
                            </span>
                        </span>
                    </label>
                </div>
            </div>

            <!-- EXPORT / IMPORT - TAB -->
            <div class="tab-pane" id="tab-pjh-Export-Import">
                <h3>Export</h3>
                <div class="control-group">
                    <div class="controls">
                        <span><b>PrintJoHistory Database</b>: Export all data as <a href="#" data-bind="attr: {href: $root.exportUrl('CSV'), css: {disabled: !$root.exportUrl('CSV')}}">CSV-File</a></span>
                    </div>
                </div>
                <div class="control-group" data-bind="visible: isPrintHistoryPluginAvailable">
                    <div class="controls">
                        <span><b>Legacy: Print History Database</b>: Export all data as <a href="#" data-bind="attr: {href: $root.exportUrl('legacyPrintHistory'), css: {disabled: !$root.exportUrl('legacyPrintHistory')}}">CSV-File</a></span>
                    </div>
                </div>
<!--                <div class="control-group">-->
<!--                    <div class="controls">-->
<!--                        <span><b>TODO Metadata.json</b>: OctoPrint use metadata.json files (location: upload-(sub)folders) to store all past print jobs. Export it as <a href="#" data-bind="attr: {href: $root.exportUrl('CSV'), css: {disabled: !$root.exportUrl('CSV')}}">CSV-File</a></span>-->
<!--                    </div>-->
<!--                </div>-->
<!--                <div class="control-group">-->
<!--                    <div class="controls">-->
<!--                        <span><b>TODO PrintHistory-Plugin</b>: Export all data from plugin as <a href="#" data-bind="attr: {href: $root.exportUrl('CSV'), css: {disabled: !$root.exportUrl('CSV')}}">CSV-File</a></span>-->
<!--                    </div>-->
<!--                </div>-->
                <h3>Import</h3>

                <div class="control-group">
                    <div class="controls">
                        <div class="row">
                            Import a CSV-File to the PrintJobHistory database.
                        </div>
                        <br/>
                        <div class="row">
                            <div class="span6">
                                <label class="radio">
                                    <input type="radio" name="importCSVMode" value="replace" data-bind="checked: pluginSettings.importCSVMode"> Replace current database
                                </label>
                                <label class="radio">
                                        <input type="radio" name="importCSVMode" value="append" data-bind="checked: pluginSettings.importCSVMode"> Append to database
                                </label>
                            </div>

                            <div class="span6">
                                <div class="input-prepend">
                                    <span class="btn fileinput-button">
                                        <span>Browse...</span>
                                        <input id="settings-pjh-importcsv-upload"
                                               type="file"
                                               name="file"
                                               data-url="/plugin/PrintJobHistory/importCSV"
                                               accept=".csv">
                                    </span>
                                    <span class="add-on" data-bind="text: csvFileUploadName"></span>
                                </div>
                                <button class="btn btn-primary"
                                        data-bind="disable: (csvImportInProgress() || csvFileUploadName() == undefined), click: performCSVImportFromUpload">
                                    <i class="fa fa-spinner fa-spin"
                                       data-bind="visible: csvImportInProgress"></i> Upload & import
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="control-group">
                    <div class="controls">
                        <div>
                            The CSV data will be added or totaly replaced to the current database. If you use FilamentManager-Plugin, these values were not touched.
                        </div>
                        <div>
                            HINT: Before importing a backup file of the database will be automatically created. See Storage-Tab for more details.<!-- <a href="#tab-pjh-Storage" data-toggle="tab">storage folder</a>. -->
                        </div>
                        <br>
                        <div>
                            Format:
                            <ul>
                                <li>CSV-Delimiter is a comma</li>
                                <li>You need a header row and value rows</li>
                                <li>The order of the columns doesn't matter</li>
                                <li>Use allowed header names for importing values (see below). Other column names will be skipped</li>
                            </ul>
                            Mandatory column names:
                            <ul>
                                <li><code>Print result [success canceled failed]</code></li>
                                <li><code>File Name</code></li>
                                <li><code>Start Datetime [dd.mm.yyyy hh:mm]</code></li>
                                <li><code>Duration</code></li>
                            </ul>
                            <br>
                            Other column names:
                            <ul>
                                <li><code>User</code></li>
                                <li><code>End Datetime [dd.mm.yyyy hh:mm]</code></li>
                                <li><code>File Path</code></li>
                                <li><code>File Size [bytes]</code></li>
                                <li><code>Note</code></li>
                                <li><code>Spool Name</code></li>
                                <li><code>Material</code></li>
                                <li><code>Diameter [mm]</code></li>
                                <li><code>Density [g/cm3]</code></li>
                                <li><code>Used Length [mm]</code></li>
                                <li><code>Calculated Length [mm]</code></li>
                                <li><code>Used Weight [g]</code></li>
                                <li><code>Used Filament Cost</code></li>
                                <li><code>...</code></li>
                            </ul>
                        </div>
                        <div>
                            Download a <a href="#" data-bind="attr: {href: $root.sampleCSVUrl(), css: {disabled: !$root.sampleCSVUrl()}}">sample csv</a> for a full list of all columns
                        </div>


<!--                        <div class="input-prepend">-->
<!--                            <span class="btn fileinput-button">-->
<!--                                <span>Browse...</span>-->
<!--                                <input id="settings-pjh-importcsv-upload"-->
<!--                                       type="file"-->
<!--                                       name="file"-->
<!--                                       data-url="/plugin/PrintJobHistory/importCSV"-->
<!--                                       accept=".csv">-->
<!--                            </span>-->
<!--                            <span class="add-on" data-bind="text: csvFileUploadName"></span>-->
<!--                        </div>-->
                    </div>
                </div>
<!--                <div class="control-group">-->
<!--                    <div class="controls">-->
<!--                        <button class="btn btn-primary"-->
<!--                                data-bind="enable: !csvImportInProgress(), click: performCSVImportFromUpload">-->
<!--                            <i class="fa fa-spinner fa-spin"-->
<!--                               data-bind="visible: csvImportInProgress"></i> Upload & import-->
<!--                        </button>-->
<!--                    </div>-->
<!--                </div>-->


            </div>
            <!-- STORAGE - TAB -->
            <div class="tab-pane" id="tab-pjh-Storage">
                <div class="control-group">
                    <label class="control-label">Database file location</label>
                    <div class="controls">
                        <div class="input-append">
                            <input type="text" disabled class="input-xlarge text-right" data-bind="value: databaseFileLocation"/>
                            <a href="#" class="btn btn-danger" title="ReCreate Database" data-bind="click: deleteDatabaseAction"><i class="icon-trash"></i></a>
                            <a href="#" class="btn btn-primary" title="Download Database" data-bind="attr: {href: downloadDatabaseUrl}" target="_blank"><i class="icon-download"></i></a>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">Snapshot file location</label>
                    <div class="controls">
                        <input type="text" disabled class="input-xlarge text-right" data-bind="value: snapshotFileLocation"/>
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label">Database Backupname</label>
                    <div class="controls">
                        e.g.<code>printJobHistory-backup-20191207-0924.db</code>
                    </div>
                </div>


            </div>

            <!-- DEBUGGING - TAB -->
            <div class="tab-pane" id="tab-pjh-Debugging">
                <div class="control-group">
                    <div class="controls">
                        <label class="checkbox">
                            <input type="checkbox" data-bind="checked: pluginSettings.sqlLoggingEnabled" > SQL Logging enabled
                        </label>
                    </div>
                </div>
            </div>

        </div>
    </div>

</form>


